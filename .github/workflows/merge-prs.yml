name: merge-pr

on:
  # Manually trigger the release process for a specific package
  workflow_dispatch:
    inputs:
      pckg-a:
        description: "Release pckg-a"
        required: false
        type: boolean
      pckg-b:
        description: "Release pckg-b"
        required: false
        type: boolean
      pckg-c:
        description: "Release pckg-c"
        required: false
        type: boolean
      pckg-d:
        description: "Release pckg-d"
        default: true
        required: false
        type: boolean

permissions:
  contents: write
  pull-requests: write

jobs:
  release-packages:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Merge Selection
        id: merge_pr
        run: |
          ORDER=("pckg-a" "pckg-b" "pckg-c" "pckg-d")
          SELECTED=(
            ${{ github.event.inputs.pckg-a }}
            ${{ github.event.inputs.pckg-b }}
            ${{ github.event.inputs.pckg-c }}
            ${{ github.event.inputs.pckg-d }}
          )
          PR_NUMBER=""
          MERGED_PKG=""
          for idx in "${!ORDER[@]}"; do
            pkg="${ORDER[$idx]}"
            selected="${SELECTED[$idx]}"
            if [ "$selected" = "true" ]; then
              PR_NUMBER=$(gh pr list --state open --search "release: ${pkg}" --json number,title | jq -r --arg pkg "$pkg" '.[] | select(.title | test("^release: \($pkg) v[0-9]+\\.[0-9]+\\.[0-9]+$")) | .number' | head -n1)
              if [[ -n "$PR_NUMBER" ]]; then
                echo "Found open PR #$PR_NUMBER for $pkg"
                gh pr merge $PR_NUMBER --squash --admin
                MERGED_PKG="$pkg"
                break
              fi
            fi
          done
          echo "merged_pkg=$MERGED_PKG" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
      - name: Publish merged package to NPM
        if: steps.merge_pr.outputs.merged_pkg != ''
        # env:
        #   NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          pkg="${{ steps.merge_pr.outputs.merged_pkg }}"
          echo "Publishing $pkg to NPM..."
          cd packages/$pkg
          echo "pwd: $(pwd)"
          # echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
          # npm ci
          # npm publish --access public
          cd ../..
      - name: Update open PRs and create Release/Tags for merged ones
        if: steps.merge_pr.outputs.merged_pkg != ''
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
      - name: Find open release PR number for next package
        if: steps.merge_pr.outputs.merged_pkg != ''
        id: find_pr
        run: |
          ORDER=("pckg-a" "pckg-b" "pckg-c" "pckg-d")
          CUR="${{ steps.merge_pr.outputs.merged_pkg }}"
          # Find the index of the current package
          for i in "${!ORDER[@]}"; do
            if [[ "${ORDER[$i]}" == "$CUR" ]]; then
              CUR_IDX=$i
              break
            fi
          done

          PR_NUMBER=""
          # Search for open PRs for the next packages in order
          for ((j=CUR_IDX+1; j<${#ORDER[@]}; j++)); do
            NEXT_PKG="${ORDER[$j]}"
            PR_NUMBER=$(gh pr list --state open --search "release: ${NEXT_PKG}" --json number,title | jq -r --arg pkg "$NEXT_PKG" '.[] | select(.title | test("^release: \($pkg) v[0-9]+\\.[0-9]+\\.[0-9]+$")) | .number'| head -n1)
            if [[ -n "$PR_NUMBER" ]]; then
              echo "Found open PR #$PR_NUMBER for $NEXT_PKG"
              break
            fi
          done

          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add label to release PR
        if: steps.merge_pr.outputs.merged_pkg != '' &&
          steps.find_pr.outputs.pr_number != ''
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          number: ${{ steps.find_pr.outputs.pr_number }}
          labels: ready-for-release
      # - name: Merge PR and continue the automation
      #   run: gh pr merge ${{ steps.find_pr.outputs.pr_number }} --squash --admin
      #   env:
      #     GH_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
