name: release-please

on:
  # Manually trigger the release process for a specific package
  workflow_dispatch:
    inputs:
      package-folder:
        description: "The package to be released"
        required: true
        type: choice
        options:
          - pckg-a
          - pckg-b
          - pckg-c
          - pckg-d
  push:
    # Creates a release & tag when a PR is merged into main
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-pckg-a:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.package-folder == 'pckg-a'
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Release pckg-a
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          path: packages/pckg-a
      - name: Update deps
        run: |
          node scripts/update-dep-version.js pckg-b pckg-a
      - name: Create PRs for version Bumps
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}

  release-pckg-b:
    needs: release-pckg-a
    if: github.event_name == 'workflow_dispatch' &&
      (github.event.inputs.package-folder == 'pckg-a' || github.event.inputs.package-folder == 'pckg-b')
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Release pckg-b
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          path: packages/pckg-b
      - name: Update deps
        run: |
          node scripts/update-dep-version.js pckg-c pckg-b
      - name: Create PRs for version Bumps
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}

  release-pckg-c:
    needs: release-pckg-b
    if: github.event_name == 'workflow_dispatch' &&
      (github.event.inputs.package-folder == 'pckg-a' || github.event.inputs.package-folder == 'pckg-b' ||
      github.event.inputs.package-folder == 'pckg-c')
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Release pckg-c
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          path: packages/pckg-c
      - name: Update deps
        run: |
          node scripts/update-dep-version.js pckg-d pckg-c
      - name: Create PRs for version Bumps
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}

  release-pckg-d:
    needs: release-pckg-c
    if: github.event_name == 'workflow_dispatch' &&
      (github.event.inputs.package-folder == 'pckg-a' || github.event.inputs.package-folder == 'pckg-b' ||
      github.event.inputs.package-folder == 'pckg-c' || github.event.inputs.package-folder == 'pckg-d')
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Remove devDependencies from package.json
        run: |
          cd packages/pckg-d
          mv package.json package.json.bak
          node <<- EOM
            const fs = require("fs");
            const pkg = JSON.parse(fs.readFileSync("package.json.bak", {encoding: "utf8"}));
            pkg.devDependencies = {};
            fs.writeFileSync("package.json", JSON.stringify(pkg, null, "\t"), {encoding: "utf8"});
          EOM
      - name: Release pckg-d
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          path: packages/pckg-d
  
  check-pr:
    runs-on: ubuntu-24.04
    outputs:
      from_pr: ${{steps.pr_check.outputs.from_pr}}
    steps:
      - uses: actions/checkout@v4
      - name: Check if push is from a merged PR
        id: pr_check
        run: |
          if [[ "$(git log -1 --pretty=%B)" == Merge\ pull\ request* ]]; then
            echo "from_pr=true" >> $GITHUB_OUTPUT
          else
            echo "from_pr=false" >> $GITHUB_OUTPUT
          fi
  
  publish-package:
    needs: check-pr
    if: needs.check-pr.outputs.from_pr == 'true'
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Get released package from last commit
        id: get_package
        run: |
          PKG=$(git log -1 --pretty=%B | grep -oE 'release:([a-zA-Z0-9\-]+)' | cut -d: -f2)
          echo "package=$PKG" >> $GITHUB_OUTPUT
      - name: Publish to NPM
        # if: steps.get_package.outputs.package != ''
        run: |
          echo "Publishing package: ${{ steps.get_package.outputs.package }}"
        #   cd packages/${{ steps.get_package.outputs.package }}
        #   npm ci
        #   npm publish --access public
        # env:
        #   NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Release/tag the package
        if: steps.get_package.outputs.package != ''
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
      - name: Find open release PR number
        id: find_pr
        run: |
          PKG="${{ steps.get_package.outputs.package }}"
          PR_NUMBER=$(gh pr list --state open --search "release:${PKG} " --json number,title | jq -r '.[] | select(.title | test("^release:'"${PKG}"' v[0-9]+\\.[0-9]+\\.[0-9]+$")) | .number' | head -n1)
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add label to release PR
        if: steps.find_pr.outputs.pr_number != ''
        uses: actions/github-script@v7
        with:
          script: |
            const pr = Number('${{ steps.find_pr.outputs.pr_number }}');
            if (pr) {
              await github.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr,
                labels: ['ready-for-release']
              });
              console.log(`Label added to PR #${pr}`);
            } else {
              console.log('No PR number found.');
            }